name: Build and Deploy Dioxus + TailwindCSS + DaisyUI

on:
  push:
    branches:
      - main  # เรียกใช้ workflow เมื่อมีการ push ไปที่ branch main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository content
        uses: actions/checkout@v2  # ดึงโค้ดจาก repository

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'  # ติดตั้ง Node.js เวอร์ชัน 20

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Dioxus CLI
        run: cargo install dioxus-cli

      - name: Install dependencies
        run: npm i

      - name: Install daisyUI, a plugin for Tailwind CSS
        run: npm i -D daisyui@latest

      - name: Compile TailwindCSS
        run: npx tailwindcss -i ./input.css -o ./public/tailwind.css

      - name: Verify TailwindCSS output
        run: ls -l ./public/tailwind.css  # ตรวจสอบว่าไฟล์ CSS มีอยู่จริงหรือไม่

      - name: Build Dioxus project
        run: npm run build

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v3  # เก็บผลลัพธ์การ build ไว้ใน artifact
        with:
          name: static-webpage
          path: ./dist

  deploy:
    runs-on: ubuntu-latest
    needs: build  # job นี้จะรันหลังจาก build สำเร็จ
    permissions:
      pages: write
      id-token: write  # กำหนดสิทธิ์สำหรับการเขียน ID token
    steps:
      - name: Checkout repository content
        uses: actions/checkout@v2  # ดึงโค้ดจาก repository

      - name: Download build artifact
        uses: actions/download-artifact@v3  # ดาวน์โหลด artifact ที่บิลด์เสร็จแล้ว
        with:
          name: static-webpage  # ใช้ชื่อ artifact เดียวกับที่อัปโหลด

      - name: Deploy GitHub Pages site
        uses: actions/deploy-pages@v4.0.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
